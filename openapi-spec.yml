openapi: 3.0.1
info:
  title: sample golang application
  description: demo application
  version: v1
servers:
- url: http://localhost:8080/v1
  description: Main production server
paths:
  /demo/service/v1/sprints/:sprintId:
    get:
      tags:
      - sprints
      summary: Returns a Sprint
      description: Returns a Sprint
      operationId: GetSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - sprints
      summary: Updates a Sprint
      description: Updates a Sprint
      operationId: UpdateSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - sprints
      summary: Delete Sprint
      description: Delete Sprint
      operationId: DeleteSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/sprints:
    post:
      tags:
      - sprints
      summary: Creates Sprint
      description: Creates Sprint
      operationId: CreateSprint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/sprints/:sprintId/stories/:storyId:
    get:
      tags:
      - sprints
      summary: Returns a Sprint
      description: Returns a Sprint
      operationId: GetSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - sprints
      summary: Updates a Sprint
      description: Updates a Sprint
      operationId: UpdateSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - sprints
      summary: Delete Sprint
      description: Delete Sprint
      operationId: DeleteSprint
      parameters:
      - name: sprintId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/sprints/:sprintId/stories:
    post:
      tags:
      - sprints
      summary: Creates Sprint
      description: Creates Sprint
      operationId: CreateSprint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/storys/:storyId/tasks/:taskId:
    get:
      tags:
      - storys
      summary: Returns a Story
      description: Returns a Story
      operationId: GetStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - storys
      summary: Updates a Story
      description: Updates a Story
      operationId: UpdateStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - storys
      summary: Delete Story
      description: Delete Story
      operationId: DeleteStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/storys/:storyId/tasks:
    post:
      tags:
      - storys
      summary: Creates Story
      description: Creates Story
      operationId: CreateStory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/storys/:storyId/comments/:commentId:
    get:
      tags:
      - storys
      summary: Returns a Story
      description: Returns a Story
      operationId: GetStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - storys
      summary: Updates a Story
      description: Updates a Story
      operationId: UpdateStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - storys
      summary: Delete Story
      description: Delete Story
      operationId: DeleteStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/storys/:storyId/comments:
    post:
      tags:
      - storys
      summary: Creates Story
      description: Creates Story
      operationId: CreateStory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/storys/:storyId/poComments/:commentId:
    get:
      tags:
      - storys
      summary: Returns a Story
      description: Returns a Story
      operationId: GetStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - storys
      summary: Updates a Story
      description: Updates a Story
      operationId: UpdateStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - storys
      summary: Delete Story
      description: Delete Story
      operationId: DeleteStory
      parameters:
      - name: storyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/storys/:storyId/poComments:
    post:
      tags:
      - storys
      summary: Creates Story
      description: Creates Story
      operationId: CreateStory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/persons/:personId:
    get:
      tags:
      - persons
      summary: Returns a Person
      description: Returns a Person
      operationId: GetPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - persons
      summary: Updates a Person
      description: Updates a Person
      operationId: UpdatePerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - persons
      summary: Delete Person
      description: Delete Person
      operationId: DeletePerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/persons:
    post:
      tags:
      - persons
      summary: Creates Person
      description: Creates Person
      operationId: CreatePerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/products/:productId:
    get:
      tags:
      - products
      summary: Returns a Product
      description: Returns a Product
      operationId: GetProduct
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - products
      summary: Updates a Product
      description: Updates a Product
      operationId: UpdateProduct
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - products
      summary: Delete Product
      description: Delete Product
      operationId: DeleteProduct
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/products:
    post:
      tags:
      - products
      summary: Creates Product
      description: Creates Product
      operationId: CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/orders/:orderId:
    get:
      tags:
      - orders
      summary: Returns a Order
      description: Returns a Order
      operationId: GetOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - orders
      summary: Updates a Order
      description: Updates a Order
      operationId: UpdateOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - orders
      summary: Delete Order
      description: Delete Order
      operationId: DeleteOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/orders:
    post:
      tags:
      - orders
      summary: Creates Order
      description: Creates Order
      operationId: CreateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/customers/:customerId:
    get:
      tags:
      - customers
      summary: Returns a Customer
      description: Returns a Customer
      operationId: GetCustomer
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - customers
      summary: Updates a Customer
      description: Updates a Customer
      operationId: UpdateCustomer
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - customers
      summary: Delete Customer
      description: Delete Customer
      operationId: DeleteCustomer
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/customers:
    post:
      tags:
      - customers
      summary: Creates Customer
      description: Creates Customer
      operationId: CreateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /demo/service/v1/salespersons/:salesPersonId:
    get:
      tags:
      - salespersons
      summary: Returns a SalesPerson
      description: Returns a SalesPerson
      operationId: GetSalesPerson
      parameters:
      - name: salesPersonId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesPerson'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - salespersons
      summary: Updates a SalesPerson
      description: Updates a SalesPerson
      operationId: UpdateSalesPerson
      parameters:
      - name: salesPersonId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesPerson'
      responses:
        200:
          description: Default response
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - salespersons
      summary: Delete SalesPerson
      description: Delete SalesPerson
      operationId: DeleteSalesPerson
      parameters:
      - name: salesPersonId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Success response
  /demo/service/v1/salespersons:
    post:
      tags:
      - salespersons
      summary: Creates SalesPerson
      description: Creates SalesPerson
      operationId: CreateSalesPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesPerson'
      responses:
        200:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesPerson'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    task:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        storyId:
          type: integer
          format: int32
    orderItem:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        orderId:
          type: integer
          format: int32
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    person:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    sprint:
      required:
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        stories:
          type: array
          items:
            $ref: '#/components/schemas/Story'
        owner:
          $ref: '#/components/schemas/Person'
        startDate:
          type: string
          format: date
        startTime:
          type: string
          format: date-time
        endDateTimestamp:
          type: string
          format: date-time
        currentDatetime:
          type: string
          format: date-time
        isActive:
          type: boolean
    comment:
      required:
      - addedDateTime
      - blurb
      type: object
      properties:
        id:
          type: integer
          format: int32
        blurb:
          type: string
        addedDateTime:
          type: string
          format: date-time
        storyId:
          type: integer
          format: int32
        poCommentsStoryId:
          type: integer
          format: int32
    salesPerson:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        salesPersonOrderList:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        employeeId:
          type: integer
          format: int32
    story:
      required:
      - storyTitle
      type: object
      properties:
        id:
          type: integer
          format: int32
        storyTitle:
          type: string
        sprintId:
          type: integer
          format: int32
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        assignee:
          type: integer
          format: int32
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        poComments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        sprintStoriesSprintId:
          type: integer
          format: int32
    order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        customer:
          type: integer
          format: int32
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        salesPerson:
          type: integer
          format: int32
    customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
